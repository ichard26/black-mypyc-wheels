name: Build

on:
  workflow_dispatch:
    inputs:
      revision:
        description: Revision from psf/black to compile.
        required: true
        default: mypyc-support-pt2 

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        # os: [ubuntu-20.04, windows-2019, macos-10.15]
        include:
          # - os: ubuntu-20.04
          #   platform: Linux
            # Black needs clang to compile successfully on Linux. -g0 disables debug
            # which cuts down the wheel size a fair bit!
            # extra_environment: "CC=clang CFLAGS=-g0"
            # extra_before_build: "&& yum install -y clang"

          - os: windows-2019
            platform: Windows
            # For some reason, (compiled) mypyc is failing to start up with
            # "ImportError: DLL load failed: A dynamic link library (DLL) initialization routine failed."
            # on Windows for at least 3.6. Let's just use interpreted mypy[c].
            # TODO: I know this isn't perfect since ALL of the build dependencies are
            # forced be installed via sdists, but I don't feel like special casing mypy
            # right now. See also: https://github.com/mypyc/mypyc/issues/819.
            extra_before_build: "--no-binary"

    steps:
      - uses: actions/checkout@v2

      - name: Checkout requested revision of Black
        uses: actions/checkout@v2
        with:
          repository: psf/black
          ref: "${{ github.event.inputs.revision }}"
          path: "."

      # This MUST go after the initial clone of Black or else it would first clean this
      # directory and this clone as well before cloning Black.
      - name: Checkout this repository
        uses: actions/checkout@v2
        with:
          path: .mypyc-support

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0
        env:
          CIBW_BUILD: "cp3*-*"
          # Skip the following targets:
          #  - Pythons below 3.6 (CIBW_PROJECT_REQUIRES_PYTHON below)
          #  - PyPy (pp-*)
          #  - 32-bit (*-manylinux_i686 *-win32)
          CIBW_SKIP: "*-manylinux_i686 *-win32 pp-*"

          # The double negative is counterintuitive, https://github.com/pypa/pip/issues/5735.
          CIBW_ENVIRONMENT: "BLACK_USE_MYPYC=1 MYPYC_OPT_LEVEL=3 PIP_NO_BUILD_ISOLATION=no ${{ matrix.extra_environment }}"
          CIBW_BEFORE_BUILD: "pip install -r .mypyc-support/mypyc-requirements.txt ${{ matrix.extra_before_build }}"

          CIBW_BEFORE_TEST: "pip install -r .mypyc-support/test-requirements.txt"
          CIBW_TEST_COMMAND: "pytest {project}/tests -k 'not incompatible_with_mypyc'"
          CIBW_TEST_EXTRAS: "python2,d"

          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.6.2"
          CIBW_BUILD_VERBOSITY: 1

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }} wheels
          path: ./wheelhouse/*.whl
